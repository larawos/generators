<?php

namespace App\Http\Controllers\{{path}};

use App\Http\Controllers\Controller;
use App\Http\Requests\{{path}}\Store{{class}}Request;
use App\Http\Requests\{{path}}\Update{{class}}Request;
use App\Http\Requests\{{path}}\Delete{{class}}Request;
use App\Http\Requests\{{path}}\PermanentlyDelete{{class}}Request;
use App\Services\{{path}}\{{class}}Service;

/**
 * Class {{class}}Controller
 * @package App\Http\Controllers\{{path}}
 */
class {{class}}Controller extends Controller
{
    /**
     * @var {{class}}Service
     **/
    protected ${{name}}s;

    public function __construct({{class}}Service ${{name}}s)
    {
        $this->{{name}}s = ${{name}}s;
    }

    public function index()
    {
        ${{name}}s = $this->{{name}}s->getPaginated(50);

        return compact('{{name}}s');
    }

    public function show($id)
    {
        ${{name}} = $this->{{name}}s->find($id);

        return compact('{{name}}');
    }

    public function create()
    {
        //
    }

    public function edit($id)
    {
        ${{name}} = $this->{{name}}s->find($id);

        return compact('{{name}}');
    }

    public function store(Store{{class}}Request $request)
    {
        if (!$this->{{name}}s->create($request->all()))
        {
            return $this->{{name}}s->error();
        }

        return $this->{{name}}s->success();
    }

    public function update($id, Update{{class}}Request $request)
    {
        if (!$this->{{name}}s->update($id, $request->all()))
        {
            return $this->{{name}}s->error();
        }

        return $this->{{name}}s->success();
    }

    public function destroy($id, Delete{{class}}Request $request)
    {
        if (!$this->{{name}}s->destroy($id))
        {
            return $this->{{name}}s->error();
        }

        return $this->{{name}}s->success();
    }

    public function delete($id, PermanentlyDelete{{class}}Request $request)
    {
        if (!$this->{{name}}s->delete($id))
        {
            return $this->{{name}}s->error();
        }

        return $this->{{name}}s->success();
    }
}